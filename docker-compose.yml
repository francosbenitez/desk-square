version: "3.9"
   
services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - mailhog
      - rabbitmq

  db:
    image: postgres:14
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./pg-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5433:5432"

  rabbitmq:
    image: rabbitmq:3.9-management
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"
      - "15672:15672"

  celery-worker:
    build: .
    command: poetry run celery -A config worker -l INFO
    volumes:
      - .:/code
    env_file:
      - ./.env.dev
    depends_on:
      - rabbitmq

  celery-beat:
    build: .
    command: poetry run celery -A config beat -l INFO
    volumes:
      - .:/code
    env_file:
      - ./.env.dev
    depends_on:
      - rabbitmq
      - celery-worker

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  db-data:
  rabbitmq-data:
  